-- EXECUTING THE QUERY
SELECT MIN(AMOUNT) AS MINIMUM_ORDER_VALUE FROM ORDERS
SELECT MAX(AMOUNT) AS MAXIMUM_ORDER_VALUE FROM ORDERS
SELECT AVG(AMOUNT) AS AVERAGE_ORDER_VALUE FROM ORDERS

CREATE FUNCTION FN_MULTIPLICATION_OF_10
(@NUMBER INT
)
RETURNS BIGINT
BEGIN 
RETURN @NUMBER * 10
END

SELECT DBO.FN_MULTIPLICATION_OF_10 (123456) AS MULTIPLICATION_OF_10

SELECT 
CASE WHEN 100 < 200 THEN '100 IS LESS THAN 200'
     WHEN 100 > 200 THEN '100 IS GREATER THAN 200'
ELSE '100 IS EQUAL TO 200'
END

SELECT *,
CASE WHEN AMOUNT > 3000 THEN 'HIGH AMOUNT'
     WHEN AMOUNT < 1500 THEN 'LOW AMOUNT'
ELSE 'MEDIUM AMOUNT'
END AS AMOUNT_VALUE
FROM ORDERS

CREATE FUNCTION FN_GREATER_AMOUNT
(@NUMBER INT
)
RETURNS TABLE
AS
RETURN
SELECT * FROM ORDERS WHERE AMOUNT > @NUMBER

SELECT * FROM DBO.FN_GREATER_AMOUNT (2500)
SELECT * FROM DBO.FN_GREATER_AMOUNT (500)